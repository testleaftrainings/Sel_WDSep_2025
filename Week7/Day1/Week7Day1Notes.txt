--------------------------------------------------------------------------------

âœ… Use Cases in Automation Testing (especially with Selenium + TestNG/Cucumber)

1. Final Variables â€“ Define Constants

You often use final variables to store reusable constants like URLs, locators, file paths, etc.

ðŸ”§ Why helpful?

Prevents accidental modification of critical values.


2. Final Methods â€“ Protect Core Utility Logic

You can use final for common utility/helper methods (e.g., reading Excel, logging) to avoid overriding and altering stable implementations.

ðŸ”§ Why helpful?

Prevents framework-level utility functions from being overridden and breaking behavior.

3. Final Classes â€“ Framework Core Components

Mark  classes like  Hooks as final if you don't want them to be extended.



###########################################
Layers of POM :
pages --> Each Class file within the pages package represnts ? Webpage of the Application
base ---> Project Specific  Methods and variables are implemented here
runner ----> Execution Flow is established here




###########################################
For Sequential Execution:
---------------------------
- Driver declaration should be static
- Create class inside runner package
     runCreateLead
- Select the required testcases and convert into testng.xml file
- Finally, run the testcases together sequentially from testng.xml file




###########################################

For Parallel Execution:
-----------------------
    - Remove static keyword in BaseClass
    - Create parameterized constructor in each pages
       public LoginPage(ChromeDriver driver) {
        //this keyword-used in variable level for current class reference
        //this.driver- its coming from PSM or BaseClass
        //driver- local variable
	        this.driver=driver;
         }
    - Pass driver value in each Constructor initialization in each pages and testcases
return new HomePage(driver);

//if static removed from driver -null pointer 
//i am having static keyword i cannot perform parallel

its possible  to run both seq and parallel


###########################################


Cucumber with POM:
------------------
 - Create 4 packages
     - base
        Create BaseClass with common methods
        BaseClass should extend AbstractTestNGCucumberTests
     - features
         Create feature files
     - pages
        Create classes for each page and each page should extend BaseClass
     - runner
        Create CucumberRunner class and , mention glue="pages"
        The runner class should extend BaseClass

